{"version":3,"sources":["reducers/notificationReducer.tsx","reducers/userReducer.tsx","utils/loginStorage.tsx","utils/authenticationHelper.tsx","services/userService.tsx","components/RegisterPage/index.tsx","services/loginService.tsx","reducers/loginReducer.tsx","reducers/videoReducer.tsx","reducers/produceReducer.ts","store.tsx","components/VideoEntries/entry.tsx","components/VideoEntries/entryTable.tsx","components/UserPage/index.tsx","services/videoService.tsx","components/SearchPage/index.tsx","components/VideoPage/index.tsx","components/LoginBar/index.tsx","services/produceService.tsx","components/AddProduce/index.tsx","components/AddVideoPage/index.tsx","components/NotificationBar/index.tsx","App.tsx","index.tsx"],"names":["loginSlice","createSlice","name","initialState","notifications","reducers","removeNotification","state","slice","addNotification","action","notification","payload","concat","actions","usersSlice","users","setUser","user","id","loggedKey","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","loginStorage","headers","Authorization","token","baseUrl","addUser","newUser","a","axios","post","res","data","getUser","get","addFavourite","userid","videoid","authenticationHelper","removeFavourite","delete","RegisterPage","useState","username","setUsername","password","setPassword","passwordAgain","setPasswordAgain","matching","setMatching","notEmpty","setNotEmpty","useEffect","dispatch","useDispatch","showNotification","message","error","setTimeout","submitRegistration","userService","result","document","getElementById","value","response","submit","event","preventDefault","className","onSubmit","onChange","target","type","disabled","login","createAsyncThunk","credentials","thunkAPI","loginService","logout","loadUser","videosSlice","videos","setVideos","reduce","memo","video","produceSlice","produce","setProduce","length","console","log","pro","rootReducer","combineReducers","userReducer","loginReducer","videoReducer","produceReducer","notificationReducer","store","configureStore","reducer","useAppDispatch","VideoEntry","history","useHistory","onClick","push","videoName","channelName","href","videoUrl","title","len","ingredients","sortedIng","sort","b","pricePerGram","quantity","compareIngredients","max","mostUsedIngredients","map","ing","produceName","calories","forEach","i","caloriesPerGram","price","timeInMinutes","vegetarian","favourites","clicks","Date","Number","added","toDateString","EntryTable","UserPage","useParams","addedSelected","setAddedSelected","useSelector","waitDispatch","favouriteVideos","addVideo","newVideo","addClick","put","addIngredient","newIngredients","getVideos","parameters","ids","minClicks","maxClicks","minFavourites","maxFavourites","SearchPage","field","setField","searchList","setSearchList","search","setSearch","videoService","completeSearch","s","toLowerCase","placeholder","Math","random","isInteger","addSearch","filter","l","Object","values","VideoPage","loginId","isFavourite","v","idQuery","fetchVideos","fetchUser","e","addToFavourites","userResult","videoResult","removeFromFavourites","LoginBar","submitLogin","logUser","addProduce","newProduce","getProduce","AddProduce","setName","setCalories","setPrice","suitableValues","Boolean","isFinite","submitProduce","produceService","Error","min","style","color","AddVideoPage","openAdd","setOpenAdd","link","setLink","linkError","setLinkError","time","setTime","grams","setGrams","setIngredients","minutesError","setMinutesError","gramsError","setGramsError","setVegetarian","undefined","ingPro","setIngPro","waitForDispatch","startsWith","userId","now","produceId","videoId","checked","step","defaultValue","p","includes","ingredient","submitIngredient","NotificationBar","n","index","App","path","render","exact","from","to","ReactDOM"],"mappings":"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","file":"static/js/main.dbda9f34.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState: NotificationState = {notifications: []}\r\n\r\nconst loginSlice = createSlice({\r\n    name: 'notifications',\r\n    initialState,\r\n    reducers: {\r\n        removeNotification(state) {\r\n            return {...state, notifications: state.notifications.slice(1)}\r\n        },\r\n        addNotification(state, action: PayloadAction<Notification>) {\r\n            const notification = action.payload\r\n            return {...state, notifications: state.notifications.concat(notification)}\r\n        }\r\n    }\r\n})\r\n\r\nexport const { removeNotification, addNotification } = loginSlice.actions\r\n\r\nexport interface Notification {\r\n    message: string,\r\n    error: boolean\r\n}\r\nexport interface NotificationState {\r\n    notifications: Notification[]\r\n}\r\n\r\nexport default loginSlice.reducer","\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { User } from '../types'\r\n\r\nconst initialState: UserState = {users: {}}\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState,\r\n    reducers: {\r\n        setUser(state, action: PayloadAction<User>) {\r\n            const user: User = action.payload\r\n            return {...state, users: {...state.users, [user.id]: {...user}}}\r\n            }\r\n    }\r\n})\r\n\r\nexport const {setUser} = usersSlice.actions\r\nexport interface UserState {\r\n    users: { [id: number]: User },\r\n}\r\n\r\nexport default usersSlice.reducer","import { LoggedInUser } from \"../types\"\r\n\r\nconst loggedKey = \"LoggedUser\"\r\n\r\nconst saveUser = (user: LoggedInUser) => {\r\n    localStorage.setItem(loggedKey, JSON.stringify(user));\r\n}\r\n\r\nconst loadUser = (): LoggedInUser | null => {\r\n    const user = localStorage.getItem(loggedKey);\r\n    if(!user) {\r\n        return null;\r\n    }\r\n    return JSON.parse(user);\r\n}\r\n\r\nconst logoutUser = () => {\r\n    localStorage.removeItem(loggedKey);\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    saveUser,\r\n    loadUser,\r\n    logoutUser\r\n}","import loginStorage from \"./loginStorage\"\r\n\r\nconst getAuthenticationHeaders = () => {\r\n    const user = loginStorage.loadUser()\r\n    if(!user) {\r\n        return {\r\n            headers: { Authorization: `bearer FalseToken`}\r\n        }\r\n    }\r\n    return {\r\n        headers: { Authorization: `bearer ${user.token}` }\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getAuthenticationHeaders\r\n}","import axios from 'axios'\r\nimport { NewUser, User } from \"../types\"\r\nimport authenticationHelper from '../utils/authenticationHelper'\r\n\r\nconst baseUrl = '/api/user'\r\n\r\nconst addUser = async (newUser: NewUser): Promise<User> => {\r\n    const res = await axios.post(baseUrl, newUser)\r\n    return res.data\r\n}\r\n\r\nconst getUser = async (id: User['id']): Promise<User> => {\r\n    const res = await axios.get(`${baseUrl}/${id}`)\r\n    return res.data;\r\n}\r\n\r\nconst addFavourite = async (userid: User['id'], videoid: User['id']) => {\r\n    await axios.post(`${baseUrl}/${userid}/favourite/${videoid}`,null, {headers: {Authorization: authenticationHelper.getAuthenticationHeaders().headers.Authorization}})\r\n}\r\n\r\nconst removeFavourite = async (userid: User['id'], videoid: User['id']) => {\r\n    await axios.delete(`${baseUrl}/${userid}/favourite/${videoid}`, {headers: {Authorization: authenticationHelper.getAuthenticationHeaders().headers.Authorization}})\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addUser, getUser, addFavourite, removeFavourite }","import React, { FormEvent, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addNotification, removeNotification } from '../../reducers/notificationReducer'\r\nimport { setUser } from '../../reducers/userReducer'\r\nimport userService from '../../services/userService'\r\nimport { NewUser } from '../../types'\r\n\r\nexport const RegisterPage: React.FC = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordAgain, setPasswordAgain] = useState('')\r\n    const [matching, setMatching] = useState(true)\r\n    const [notEmpty, setNotEmpty] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(password && passwordAgain && password !== passwordAgain) {\r\n            setNotEmpty(true)\r\n            setMatching(false)\r\n        } else if (!password || !passwordAgain) {\r\n            setNotEmpty(false)\r\n            setMatching(false)\r\n        } else {\r\n            setNotEmpty(true)\r\n            setMatching(true)\r\n        }\r\n    }, [passwordAgain, password])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const showNotification = (message: string, error: boolean) => {\r\n        dispatch(addNotification({message, error}))\r\n        setTimeout(() => dispatch(removeNotification()), 2000)\r\n    }\r\n    \r\n    const submitRegistration = async (newUser: NewUser) => {\r\n        const {username, password} = newUser;\r\n        if(!username || !password) {\r\n            showNotification(\"All fields must be filled\", true)\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const result = await userService.addUser(newUser)\r\n\r\n            dispatch(setUser(result));\r\n\r\n            (document.getElementById('username-input') as HTMLInputElement).value = \"\";\r\n            (document.getElementById('password-input') as HTMLInputElement).value = \"\";\r\n            (document.getElementById('password-again-input') as HTMLInputElement).value = \"\";\r\n\r\n            setUsername(\"\")\r\n            setPassword(\"\")\r\n            setPasswordAgain(\"\")\r\n\r\n            showNotification(\"New user created! Welcome!\", false)\r\n        } catch (e) {\r\n            showNotification(e.response.data, true)\r\n        }\r\n    }\r\n\r\n    const submit= async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        submitRegistration({username, password})\r\n    }\r\n    \r\n    return(\r\n        <div className=\"form-background center-text top-padding bottom-padding\">\r\n            <h1> Create new user:</h1>\r\n            <form onSubmit={submit}>\r\n                <div className=\"top-margin\">\r\n                    <div>\r\n                        <p>Username</p>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"text-input half\" id=\"username-input\" value={username} onChange={({target}) => setUsername(target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"top-margin\">\r\n                    <div>\r\n                        <p>Password</p>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"text-input half\" id=\"password-input\" type='password' value={password} onChange={({target}) => setPassword(target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"top-margin\">\r\n                    <div>\r\n                        <p>Password again</p>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"text-input half\" id=\"password-again-input\" type='password' value={passwordAgain} onChange={({target}) => setPasswordAgain(target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"top-margin\">\r\n                    {(!matching && notEmpty) && \r\n                        <div>\r\n                            <p>The passwords do not match!</p>\r\n                        </div>\r\n                    }\r\n                    <div className=\"top-margin\">\r\n                        <button className=\"add-button\" type='submit' disabled={!(matching && notEmpty)}>Create account!</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport { LoggedInUser } from '../types'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (username: string, password: string): Promise<LoggedInUser> => {\r\n    const res = await axios.post(baseUrl, {username, password})\r\n    return res.data\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    login\r\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { LoggedInUser, NewUser } from \"../types\"\r\nimport loginService from '../services/loginService';\r\n\r\nconst initialState: LoginState = {user: null}\r\n\r\nexport const login = createAsyncThunk(\r\n    'login/login',\r\n    async(credentials: NewUser, thunkAPI) => {\r\n        const {username, password} = credentials\r\n        const response = await loginService.login(username, password);\r\n        return response\r\n    }\r\n)\r\n\r\nconst loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState,\r\n    reducers: {\r\n        logout(state) {\r\n            return initialState\r\n        },\r\n        loadUser(state, action: PayloadAction<LoggedInUser>) {\r\n            const user = action.payload\r\n            return {...state, user}\r\n        }\r\n    }\r\n})\r\n\r\nexport const { logout, loadUser } = loginSlice.actions\r\n\r\nexport interface LoginState {\r\n    user: LoggedInUser | null\r\n}\r\n\r\nexport default loginSlice.reducer","\r\nimport { createSlice, PayloadAction} from '@reduxjs/toolkit'\r\nimport { Video} from '../types'\r\n\r\nconst initialState: VideoState = {videos: {}}\r\n\r\nconst videosSlice = createSlice({\r\n    name: 'videos',\r\n    initialState,\r\n    reducers: {\r\n        setVideos(state, action: PayloadAction<Video[]>) {\r\n            const videos: Video[] = action.payload\r\n            return {...state, videos: {...videos.reduce((memo, video: Video) => ({...memo, [video.id]: video}), {})}}\r\n            }\r\n    }\r\n})\r\n\r\nexport const {setVideos} = videosSlice.actions\r\n\r\nexport interface VideoState {\r\n    videos: { [id: number]: Video },\r\n}\r\n\r\nexport default videosSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Produce } from '../types';\r\n\r\nconst initialState: ProduceState = {produce: {}}\r\n\r\nconst produceSlice = createSlice({\r\n    name: 'produce',\r\n    initialState,\r\n    reducers: {\r\n        setProduce(state, action: PayloadAction<Produce[]>) {\r\n        const produce: Produce[] = action.payload\r\n        if(!action.payload || action.payload.length === 0) {\r\n            return state\r\n        }\r\n        console.log(produce)\r\n        return {...state, produce: {...state.produce, ...produce.reduce((memo, pro: Produce) => ({...memo, [pro.id]: pro}), {})}}\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport interface ProduceState {\r\n    produce: { [id: number]: Produce},\r\n}\r\n\r\nexport const { setProduce } = produceSlice.actions\r\nexport default produceSlice.reducer","import {combineReducers} from 'redux'\r\nimport userReducer from './reducers/userReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport videoReducer from './reducers/videoReducer'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { useDispatch } from 'react-redux'\r\nimport produceReducer from './reducers/produceReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    users: userReducer,\r\n    login: loginReducer,\r\n    videos: videoReducer,\r\n    produce: produceReducer,\r\n    notifications: notificationReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer\r\n})\r\n\r\nexport default store\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Ingredient, Video } from '../../types'\r\n\r\n\r\nexport const VideoEntry: React.FC<{video: Video}> = ({video}) => {\r\n\r\n    const history = useHistory()\r\n    const compareIngredients = (a: Ingredient, b: Ingredient) => {\r\n        return (a.produce.pricePerGram * a.quantity) - (b.produce.pricePerGram * b.quantity)\r\n    }\r\n\r\n    const mostUsedIngredients = (): Ingredient[] => {\r\n        const len = video.ingredients.length\r\n        if(len <= 2) return video.ingredients\r\n        const sortedIng = video.ingredients.slice().sort((a, b) => compareIngredients(a, b))\r\n        const max = len > 3 ? 2 : sortedIng.length - 1\r\n        return sortedIng.slice(0, max)\r\n    }\r\n\r\n    const calories = (): Number => {\r\n        var calories = 0\r\n        video.ingredients.forEach((i: Ingredient) => calories += (i.produce.caloriesPerGram * i.quantity))\r\n        return calories\r\n    }\r\n    \r\n    const price = (): Number => {\r\n        var price = 0\r\n        video.ingredients.forEach((i: Ingredient) => price += (i.produce.pricePerGram * i.quantity))\r\n        return price/100\r\n    }\r\n\r\n    return (\r\n        <section className=\"grid-video-entry top-margin\">\r\n            <div className=\"bar lighter start-f start-m\"/>\r\n            <div className=\"bar bar-button lighter\">\r\n                <p onClick={() => history.push(`/video/${video.id}`)}>{video.videoName}</p>\r\n            </div>\r\n            <div className=\"bar\">\r\n                <p>{video.channelName}</p>\r\n            </div>\r\n            <div className=\"full-screen-only\">\r\n                <a href={video.videoUrl} title={video.videoUrl}>\r\n                    <div className=\"bar bar-button lighter full-screen-only\">\r\n                        <p>To video!</p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            <div className=\"bar full-screen-only\">\r\n                <div>\r\n                    {mostUsedIngredients().map((ing: Ingredient) => {\r\n                        return <p key={ing.id}>{ing.produce.produceName}</p>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"bar lighter\">\r\n                <p>{calories()}</p>\r\n            </div>\r\n            <div className=\"bar \">\r\n                <p>{price()}€</p>\r\n            </div>\r\n            <div className=\"bar lighter\">\r\n                <p>{video.timeInMinutes}</p>\r\n            </div>\r\n            <div className=\"bar full-screen-only\">\r\n                <p>{video.vegetarian ? \"Yes\" : \"No\"}</p>\r\n            </div>\r\n            <div className=\"bar lighter full-screen-only\">\r\n                <p>{video.favourites}</p>\r\n            </div>\r\n            <div className=\"bar full-screen-only\">\r\n                <p>{video.clicks}</p>\r\n            </div>\r\n            <div className=\"bar lighter full-screen-only\">\r\n                <p>{new Date(Number(video.added)).toDateString()}</p>\r\n            </div>\r\n            <div className=\"bar full-screen-only\">\r\n                <p>{video.username}</p>\r\n            </div>\r\n            <div className=\"bar end-f end-m lighter-m\"/>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport { Video } from '../../types'\r\nimport { VideoEntry } from './entry'\r\n\r\n\r\nexport const EntryTable: React.FC<{videos: Video[]}> = ({videos}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form-background top-margin bottom-margin center-text\">\r\n                <p className=\"side-margin\">! Links are checked with YouTube API to be actual videos when submitted, but we can't know what they actually\r\n                    contain. If you wan't to be sure what you click, try searching on YouTube with the video title. !\r\n                </p>\r\n            </div>\r\n            <section className=\"grid-video-entry\">\r\n                <div className=\"bar lighter start-f start-m\"/>\r\n                <div className=\"bar lighter\">\r\n                    <p>Video: </p>\r\n                </div>\r\n                <div className=\"bar\">\r\n                    <p>Channel: </p>\r\n                </div>\r\n                <div className=\"bar lighter full-screen-only\">\r\n                    <p>Link: </p>\r\n                </div>\r\n                <div className=\"bar full-screen-only\">\r\n                    <p>Most used ingredients: </p>\r\n                </div>\r\n                <div className=\"bar lighter\">\r\n                    <p>Calories (approx.): </p>\r\n                </div>\r\n                <div className=\"bar\">\r\n                    <p>Price (approx.): </p>\r\n                </div>\r\n                <div className=\"bar lighter\">\r\n                    <p>Cooking time: </p>\r\n                </div>\r\n                <div className=\"bar full-screen-only\">\r\n                    <p>Vegetarian: </p>\r\n                </div>\r\n                <div className=\"bar lighter full-screen-only\">\r\n                    <p>Favourites: </p>\r\n                </div>\r\n                <div className=\"bar full-screen-only\">\r\n                    <p>Clicks: </p>\r\n                </div>\r\n                <div className=\"bar lighter full-screen-only\">\r\n                    <p>Added: </p>\r\n                </div>\r\n                <div className=\"bar full-screen-only\">\r\n                    <p>Adding user: </p>\r\n                </div>\r\n                <div className=\"bar lighter-m end-m end-f\"/>\r\n            </section>\r\n            {videos && videos.map((video: Video) => <VideoEntry key={video.id} video={video}/>)}\r\n            {(!videos || videos.length === 0) && \r\n                <div className=\"form-background top-margin bottom-margin center-text\">\r\n                    <p className=\"side-margin\">There is no videos here. Take a look elsewhere</p>\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { addNotification, removeNotification } from '../../reducers/notificationReducer'\r\nimport { setUser } from '../../reducers/userReducer'\r\nimport userService from '../../services/userService'\r\nimport { AppDispatch, RootState, useAppDispatch } from '../../store'\r\nimport { EntryTable } from '../VideoEntries/entryTable'\r\n\r\nexport const UserPage: React.FC = () => {\r\n    const { userid } = useParams<{ userid: string }>()\r\n    const [addedSelected, setAddedSelected] = useState(true)\r\n\r\n    const dispatch: AppDispatch = useAppDispatch()\r\n    const user = useSelector((state: RootState) => state.users.users[Number(userid)])\r\n\r\n    useEffect(() => {\r\n        const waitDispatch = async() => {\r\n            try {\r\n                const result = await userService.getUser(Number(userid))\r\n                dispatch(setUser(result))\r\n            } catch (e) {\r\n                dispatch(addNotification({message: e.response.data, error: true}))\r\n                setTimeout(() => dispatch(removeNotification()), 2000)\r\n            } \r\n        };\r\n        waitDispatch()\r\n    }, [dispatch, userid])\r\n\r\n    if(!user || (user && !user)) {\r\n        return <div/>\r\n    }\r\n\r\n    if(user) {\r\n        return(\r\n            <div>\r\n                <div className=\"center-text\">\r\n                    <h1>{user.username}'s videos</h1>\r\n                </div>\r\n                <div className=\"radio-button center-text\">\r\n                    <button className={addedSelected ? \"darker start-m start-f darken-hover\" : \"bar start-m start-f darken-hover\"} onClick={() => setAddedSelected(true)}>Added</button>\r\n                    <button className={addedSelected ? \"bar end-m end-f darken-hover\" : \"darker end-m end-f darken-hover\"} onClick={() => setAddedSelected(false)}>Favourites</button>\r\n                </div>\r\n                {addedSelected && \r\n                <div className=\"top-padding\">\r\n                    <EntryTable videos={user.videos} />\r\n                </div>\r\n                }\r\n                {!addedSelected && \r\n                <div className=\"top-padding\">\r\n                    <EntryTable videos={user.favouriteVideos} />\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    return <div></div>\r\n}","import axios from \"axios\";\r\nimport { Ingredient, newIngredient, newVideo, Video, VideoQuery } from \"../types\";\r\nimport authenticationHelper from \"../utils/authenticationHelper\";\r\n\r\nconst baseUrl = '/api/videos'\r\n\r\nconst addVideo = async (newVideo: newVideo): Promise<Video> => {\r\n    const res = await axios.post(baseUrl, newVideo, {headers: {Authorization: authenticationHelper.getAuthenticationHeaders().headers.Authorization}})\r\n    return res.data\r\n}\r\n\r\nconst addClick = async (id: Video['id']) => {\r\n    await axios.put(`${baseUrl}/${id}/click`)\r\n}\r\n\r\nconst addFavourite = async (id: Video['id']) => {\r\n    await axios.put(`${baseUrl}/${id}/favourite/add`)\r\n}\r\n\r\nconst removeFavourite = async (id: Video['id']) => {\r\n    await axios.put(`${baseUrl}/${id}/favourite/remove`)\r\n}\r\n\r\nconst addIngredient = async(newIngredients: newIngredient[]): Promise<Ingredient> => {\r\n    const res = await axios.post('/api/ingredients', newIngredients, {headers: {Authorization: authenticationHelper.getAuthenticationHeaders().headers.Authorization}})\r\n    return res.data\r\n}\r\n\r\nconst getVideos = async (parameters: VideoQuery): Promise<Video[]> => {\r\n    const {ids, users, minClicks, maxClicks, minFavourites, maxFavourites, ingredients, videos} = parameters\r\n    const res = await axios.post(`${baseUrl}/get`, {ids, users, minClicks, maxClicks, minFavourites, maxFavourites, ingredients, videos})\r\n    return res.data;\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getVideos, addVideo, addIngredient, addClick, addFavourite, removeFavourite}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { addNotification, removeNotification } from '../../reducers/notificationReducer'\r\nimport { setVideos } from '../../reducers/videoReducer'\r\nimport videoService from '../../services/videoService'\r\nimport { RootState, useAppDispatch } from '../../store'\r\nimport { VideoQuery } from '../../types'\r\nimport { EntryTable } from '../VideoEntries/entryTable'\r\n\r\ninterface Search {\r\n    field: string,\r\n    search: string,\r\n    id: number\r\n}\r\nexport const SearchPage: React.FC = () => {\r\n    const videos = useSelector((state: RootState) => state.videos.videos)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [field, setField] = useState('User')\r\n    const [searchList, setSearchList] = useState<Search[]>([])\r\n    const [search, setSearch] = useState('')\r\n\r\n    const showNotification = (message: string, error: boolean) => {\r\n        dispatch(addNotification({message, error}))\r\n        setTimeout(() => dispatch(removeNotification()), 2000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const waitDispatch = async() => {\r\n            try {\r\n                const result = await videoService.getVideos({})\r\n                console.log(result)\r\n                dispatch(setVideos(result))\r\n            } catch (e) {\r\n                dispatch(addNotification({message: e.response.data, error: true}))\r\n                setTimeout(() => dispatch(removeNotification()), 2000)\r\n            }\r\n        };\r\n        waitDispatch()\r\n    },[dispatch])\r\n\r\n    const addSearch = () => {\r\n        if(search) {\r\n            const s = {id: Math.random(), field, search}\r\n            if(field === 'User' || field === 'Video' || field === 'Ingredient' || Number.isInteger(Number(search))) {\r\n                setSearchList(searchList.concat(s));\r\n                (document.getElementById(\"search-input\") as HTMLInputElement).value = \"\"\r\n                setSearch('')\r\n            } else {\r\n               showNotification(\"Must be integer\", true)\r\n            }\r\n        } else {\r\n            showNotification(\"Search can't be empty\", true)\r\n        }\r\n    }\r\n\r\n\r\n    const completeSearch = async () => {\r\n        const parameters: VideoQuery = {}\r\n        searchList.forEach((s: Search) => {\r\n            switch(s.field) {\r\n                case 'User':\r\n                    parameters.users = parameters.users ? parameters.users.concat(s.search.toLowerCase()) : parameters.users = [s.search.toLowerCase()]\r\n                    break;\r\n                case 'Video':\r\n                    parameters.videos = parameters.videos ? parameters.videos.concat(`%${s.search.toLowerCase()}%`) : parameters.videos = [`%${s.search.toLowerCase()}%`]\r\n                    break;\r\n                case 'Clicks (min)':\r\n                    parameters.minClicks = Number(s.search)\r\n                    break;\r\n                case 'Clicks (max)':\r\n                    parameters.maxClicks = Number(s.search)\r\n                    break;\r\n                case 'Favourites (min)':\r\n                    parameters.minFavourites = Number(s.search)\r\n                    break;\r\n                case 'Favourites (max)':\r\n                    parameters.maxFavourites = Number(s.search)\r\n                    break;\r\n                case 'Ingredient':\r\n                    parameters.ingredients = parameters.ingredients ? parameters.ingredients.concat(`%${s.search.toLowerCase()}%`) : parameters.ingredients = [`%${s.search.toLowerCase()}%`]\r\n                    break;\r\n            }\r\n        })\r\n        try {\r\n            const result = await videoService.getVideos(parameters)\r\n            dispatch(setVideos(result))\r\n        } catch (e) {\r\n            showNotification(e.response.data, true)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <div className=\"center-text search-page-grid form-background\">\r\n                    <div className=\"search-module-grid\">\r\n                        <p className=\"top-margin\">Search:</p>\r\n                        <div className=\"search-bar-grid\">\r\n                            <div className=\"darker open-button start-m start-f vertical\">\r\n                                <select className=\"side-margin transparent\"onChange={({target}) => setField(target.value)}>\r\n                                    <option value='User'>By adding user</option>\r\n                                    <option value='Video'>By video</option>\r\n                                    <option value='Clicks (min)'>By clicks (min)</option>\r\n                                    <option value='Clicks (max)'>By clicks (max)</option>\r\n                                    <option value='Favourites (min)'>By favourites (min)</option>\r\n                                    <option value='Favourites (max)'>By favourites (max)</option>\r\n                                    <option value='Ingredient'>By ingredient</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"darker\">\r\n                                <input className=\"text-input white-text\" placeholder=\"Search...\" id=\"search-input\" onChange={({target}) => setSearch(target.value)}></input>\r\n                            </div>\r\n                            <button className=\"darker end-f end-m open-button vertical\"onClick={() => addSearch()}>Add</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inside-background\">\r\n                        <p className=\"bottom-margin\">Current search: </p>\r\n                        {searchList.map((s: Search) => \r\n                            <div key={s.id}>\r\n                                <span>{s.field} = {s.search} </span>\r\n                                <button className=\"remove-button\"onClick={() => setSearchList(searchList.filter((l) => l.id !== s.id))}></button>\r\n                            </div>)}\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"button\" className=\"add-button\" onClick={() => completeSearch()}>Search</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <EntryTable videos={Object.values(videos)}/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { addNotification, removeNotification } from '../../reducers/notificationReducer'\r\nimport { setUser } from '../../reducers/userReducer'\r\nimport { setVideos } from '../../reducers/videoReducer'\r\nimport userService from '../../services/userService'\r\nimport videoService from '../../services/videoService'\r\nimport { RootState, useAppDispatch } from '../../store'\r\nimport { VideoQuery } from '../../types'\r\n\r\nexport const VideoPage: React.FC = () => {\r\n    const dispatch = useAppDispatch()\r\n    const { videoid } = useParams<{ videoid: string }>()\r\n    const video = useSelector((state: RootState) => state.videos.videos[Number(videoid)])\r\n    const loginId = useSelector((state: RootState) => state.login.user?.id)\r\n    const user = useSelector((state: RootState) => state.users.users[loginId || -1])\r\n    \r\n    const isFavourite = user?.favouriteVideos.filter((v) => v.id === Number(videoid)).length > 0\r\n\r\n    const showNotification = (message: string, error: boolean) => {\r\n        dispatch(addNotification({message, error}))\r\n        setTimeout(() => dispatch(removeNotification()), 2000)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const idQuery: VideoQuery = {\r\n            ids: [Number(videoid)]\r\n        }\r\n        const fetchVideos = async () => {\r\n            const result = await videoService.getVideos(idQuery)\r\n            dispatch(setVideos(result))\r\n        }\r\n        const fetchUser = async() => {\r\n            if(loginId) {\r\n                const result = await userService.getUser(loginId)\r\n                dispatch(setUser(result))\r\n            }\r\n        }\r\n\r\n        try {\r\n            fetchVideos()\r\n                \r\n            if(loginId) {\r\n                fetchUser()\r\n            }\r\n        } catch (e) {\r\n            dispatch(addNotification({message: e.response.data , error: true}))\r\n            setTimeout(() => dispatch(removeNotification()), 2000)\r\n        }\r\n\r\n    }, [dispatch, videoid, loginId])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            videoService.addClick(Number(videoid))\r\n        } catch {\r\n            return\r\n        }\r\n    }, [videoid])\r\n\r\n\r\n    const addToFavourites = async() => {\r\n        if (user && video) { \r\n            const idQuery: VideoQuery = {\r\n                ids: [Number(videoid)]\r\n            }\r\n            try {\r\n                await userService.addFavourite(user.id, video.id)\r\n                const userResult = await userService.getUser(user.id)\r\n                dispatch(setUser(userResult))\r\n                const videoResult = await videoService.getVideos(idQuery)\r\n                dispatch(setVideos(videoResult))\r\n                await videoService.addFavourite(video.id)\r\n                showNotification(\"Video added to favourites!\", false)\r\n            } catch(e) {\r\n                showNotification(e.response.data, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeFromFavourites = async() => {\r\n        if (user && video) { \r\n            const idQuery: VideoQuery = {\r\n                ids: [Number(videoid)]\r\n            }\r\n\r\n            try {\r\n                await userService.removeFavourite(user.id, video.id)\r\n                const userResult = await userService.getUser(user.id)\r\n                dispatch(setUser(userResult))\r\n                const videoResult = await videoService.getVideos(idQuery)\r\n                dispatch(setVideos(videoResult))\r\n                await videoService.removeFavourite(video.id)\r\n                showNotification(\"Video removed from favourites\", false)\r\n            } catch(e) {\r\n                showNotification(e.response.data, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    if(!video) {\r\n        return(\r\n            <div>\r\n                <h1>No video found!</h1>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <section className=\"form-background center-text top-padding bottom-padding\">\r\n                <div className=\"inside-background\">\r\n                    <div className=\"side-margin\">\r\n                        <div>\r\n                            <h1>{video.videoName}</h1>\r\n                            <p>By: {video.channelName}</p>\r\n                        </div>\r\n                        <div>\r\n                            <a href={video.videoUrl}>{video.videoUrl}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"inside-background top-margin\">\r\n                    <div className=\"side-margin\">\r\n                        <div>\r\n                            <h1>Ingredients</h1>\r\n                            <div className=\"top-margin\">\r\n                                {video.ingredients.map((i) => {\r\n                                    return (\r\n                                        <p key={i.id}>{i.quantity}g of {i.produce.produceName}</p>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"top-margin\">\r\n                            <p>Cooking time: {video.timeInMinutes}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>Calories: {video.ingredients.reduce((memo, i) => memo + (i.produce.caloriesPerGram * i.quantity), 0)/100}€</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>Price: {video.ingredients.reduce((memo, i) => memo + (i.produce.pricePerGram * i.quantity), 0) / 100}€</p>\r\n                        </div>\r\n                        <div className=\"top-margin\">\r\n                            <p>Recipe is vegetarian: {video.vegetarian ? 'YES' : 'NO'}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"top-margin\">\r\n                    {(user && user.id) &&\r\n                        <div>\r\n                            {!isFavourite && <button className=\"add-button\" onClick={() => addToFavourites()}>Add to favourites!</button>}\r\n                            {isFavourite && <button className=\"add-button\" onClick={() => removeFromFavourites()}>Remove from favourites!</button>}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}","import React, { FormEvent, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { loadUser, logout} from '../../reducers/loginReducer'\r\nimport { addNotification, removeNotification } from '../../reducers/notificationReducer'\r\nimport loginService from '../../services/loginService'\r\nimport { RootState, useAppDispatch } from '../../store'\r\nimport { LoggedInUser } from '../../types'\r\nimport loginStorage from '../../utils/loginStorage'\r\n\r\nexport const LoginBar: React.FC = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const user = useSelector((state: RootState) => state.login.user)\r\n    \r\n    const dispatch = useAppDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const useLogout = () => {\r\n        loginStorage.logoutUser()\r\n        dispatch(logout())\r\n        showNotification(\"Logged out!\", false)\r\n    }\r\n\r\n    const showNotification = (message: string, error: boolean) => {\r\n        dispatch(addNotification({message, error}))\r\n        setTimeout(() => dispatch(removeNotification()), 2000)\r\n    }\r\n\r\n    const submitLogin = async (username: string, password: string) => {\r\n        try {\r\n            (document.getElementById('login-username-input') as HTMLInputElement).value = \"\";\r\n            (document.getElementById('login-password-input') as HTMLInputElement).value = \"\";\r\n            const result = await loginService.login(username, password)\r\n            setUsername('')\r\n            setPassword('')\r\n            const logUser = dispatch(loadUser(result))\r\n            if(logUser.payload) {\r\n                loginStorage.saveUser(logUser.payload as LoggedInUser)\r\n            }\r\n            showNotification(`Welcome, ${(logUser.payload as LoggedInUser).username}`, false);\r\n        } catch (e) {\r\n            console.log(e)\r\n            showNotification(e.response.data, true)\r\n            setUsername('')\r\n            setPassword('')\r\n        }\r\n    }\r\n\r\n    const submit= async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        await submitLogin(username, password)\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-form\">\r\n            {!user && \r\n                <form onSubmit={submit} className=\"grid-logged-out\">\r\n                    <button className=\"bar start-m start-f bar-button\" type=\"button\" onClick={() => history.push('/search')}>Search videos</button>\r\n                    <div className=\"bar\">\r\n                        <div className=\"login-form\">\r\n                            <p>You are not logged in </p>\r\n                            <input id=\"login-username-input\" className=\"text-input\" placeholder=\"Username\" value={username} onChange={({target}) => setUsername(target.value)} /> \r\n                            <input id=\"login-password-input\" className=\"text-input\" placeholder=\"Password\"type='password' value={password} onChange={({target}) => setPassword(target.value)} />\r\n                            <button className=\"add-button\" type='submit'>Log in</button>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"bar end-m end-f bar-button\" type='button' onClick={() => history.push('/register')}>Register</button>\r\n                </form>\r\n            }\r\n\r\n            {user &&\r\n                <div className=\"grid-logged-in\">\r\n                    <p className=\"bar start-f full-screen-only\">You are logged in as {user.username}!</p>\r\n                    <button className=\"bar start start-m bar-button\" onClick={() => history.push('/search')}>Search videos</button>\r\n                    <button className=\"bar bar-button\" onClick={() => history.push('/addVideo')}>Add a video</button>\r\n                    <button className=\"bar bar-button\" onClick={() => history.push(`/user/${user.id}`)}>Own page</button>\r\n                    <button className=\"bar end-m end-f bar-button\" type='button' onClick={useLogout}>Log out</button>\r\n                </div>\r\n            }   \r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\nimport { newProduce, Produce} from \"../types\"\r\nimport authenticationHelper from '../utils/authenticationHelper'\r\n\r\nconst baseUrl = '/api/produce'\r\n\r\nconst addProduce = async (newProduce: newProduce): Promise<Produce[]> => {\r\n    const res = await axios.post(baseUrl, newProduce,\r\n        {headers: {\r\n          Authorization: authenticationHelper.getAuthenticationHeaders().headers.Authorization\r\n        }})\r\n    return [res.data]\r\n}\r\n\r\nconst getProduce = async (): Promise<Produce[]> => {\r\n    const res = await axios.get(`${baseUrl}/`)\r\n    return res.data;\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addProduce, getProduce }","import React, { useState } from 'react'\r\nimport { addNotification, removeNotification } from '../../reducers/notificationReducer'\r\nimport { setProduce } from '../../reducers/produceReducer'\r\nimport produceService from '../../services/produceService'\r\nimport { useAppDispatch } from '../../store'\r\n\r\nconst AddProduce: React.FC = () => {\r\n    const [name, setName] = useState('')\r\n    const [calories, setCalories] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    \r\n    const dispatch = useAppDispatch()\r\n\r\n    const showNotification = (message: string, error: boolean) => {\r\n        dispatch(addNotification({message, error}))\r\n        setTimeout(() => dispatch(removeNotification()), 2000)\r\n    }\r\n\r\n\r\n    const suitableValues: boolean = \r\n        Boolean(name && \r\n        calories.length > 0 && Number.isFinite(Number(calories)) && Number(calories) > -1 && Number(calories) < 10 &&\r\n        price.length > 0 && Number.isFinite(Number(price)) && Number(price) > -1 && Number(price) < 1000) \r\n\r\n    const submitProduce = async () => {\r\n        if(suitableValues) {\r\n\r\n            try {\r\n                const produce = await produceService.addProduce({produceName: name, caloriesPerGram: Number(calories), pricePerGram: Number(price)})\r\n                dispatch(setProduce(produce))\r\n                setName(\"\")\r\n                setCalories(\"\")\r\n                setPrice(\"\");\r\n                (document.getElementById(\"produce-name-input\") as HTMLInputElement).value = \"\";\r\n                (document.getElementById(\"produce-calories-input\") as HTMLInputElement).value = \"\";\r\n                (document.getElementById(\"produce-price-input\") as HTMLInputElement).value = \"\";\r\n                showNotification(`${name} added!`, false)\r\n            } catch (e) {\r\n                showNotification(e.response.data, true)\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"Name can't be left empty. Price has to be float. Calories has to be integer.\")\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className='add-produce-grid top-padding'>\r\n            <div>\r\n                <p>Produce name:</p>\r\n                <input className=\"text-input half\" id=\"produce-name-input\" onChange={({target}) => (setName(target.value))}></input>\r\n            </div>\r\n            <div>\r\n                <p>Calories (kcal/1g) :</p>\r\n                <input className=\"text-input half\" id=\"produce-calories-input\" type=\"number\" min=\"0\" max=\"9\" onChange={({target}) => (setCalories(target.value))}></input>\r\n            </div>\r\n            <div>\r\n                <p>Price (cent/1g):</p>\r\n                <input className=\"text-input half\" id=\"produce-price-input\" type=\"number\" min=\"0\" max=\"100000\" onChange={({target}) => (setPrice(target.value))}></input>\r\n            </div>\r\n            <div>\r\n                <button className=\"add-button\" type=\"button\" disabled={!suitableValues} onClick={() => submitProduce()}>Add!</button>\r\n            </div>\r\n            <div>\r\n                {!suitableValues &&\r\n                    <p style={{color: 'red'}}>Check that every input is filled with suitable values!</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProduce","import React, { FormEvent, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { addNotification, removeNotification } from '../../reducers/notificationReducer'\r\nimport { setProduce } from '../../reducers/produceReducer'\r\nimport produceService from '../../services/produceService'\r\nimport videoService from '../../services/videoService'\r\nimport { RootState, useAppDispatch } from '../../store'\r\nimport { newIngredient, newVideo, Video } from '../../types'\r\nimport AddProduce from '../AddProduce'\r\n\r\nconst AddVideoPage: React.FC = () => {\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [link, setLink] = useState('')\r\n    const [linkError, setLinkError] = useState(false)\r\n    const [time, setTime] = useState('')\r\n    const [search, setSearch] = useState('')\r\n    const [grams, setGrams] = useState('')\r\n    const [ingredients, setIngredients] = useState<{id: number, produceId: number, produceName: string, quantity: number}[]>([])\r\n    const [minutesError, setMinutesError] = useState(false)\r\n    const [gramsError, setGramsError] = useState(false)\r\n    const [vegetarian, setVegetarian] = useState(false)\r\n    const [ingPro, setIngPro] = useState<number|undefined>(undefined)\r\n\r\n    const produce = useSelector((state: RootState) => state.produce.produce)\r\n    const user = useSelector((state: RootState) => state.login.user)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const showNotification = (message: string, error: boolean) => {\r\n        dispatch(addNotification({message, error}))\r\n        setTimeout(() => dispatch(removeNotification()), 2000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const waitForDispatch = async() => {\r\n            try {\r\n                const result = await produceService.getProduce()\r\n                dispatch(setProduce(result))\r\n            } catch (e) {\r\n                dispatch(addNotification({message: e.response?.data || e.message, error: true}))\r\n                setTimeout(() => dispatch(removeNotification()), 2000)\r\n            }\r\n        }\r\n\r\n        waitForDispatch()\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!Number.isInteger(Number(grams))) {\r\n            setGramsError(true)\r\n        } else {\r\n            setGramsError(false)\r\n        }\r\n    }, [grams])\r\n\r\n    useEffect(() => {\r\n        if(!Number.isInteger(Number(time))) {\r\n            setMinutesError(true)\r\n        } else {\r\n            setMinutesError(false)\r\n        }\r\n    }, [time])\r\n\r\n    useEffect(() => {\r\n        if(link.startsWith('https://www.youtube.com/watch?v=')) {\r\n            setLinkError(false)\r\n        } else {\r\n            setLinkError(true)\r\n        }\r\n    }, [link])\r\n\r\n    const submitIngredient = () => {\r\n\r\n        if(gramsError || !grams || !ingPro) {\r\n            return\r\n        }\r\n\r\n        const ingredient: {id: number, produceId: number, produceName: string, quantity: number} = {\r\n            produceId: ingPro,\r\n            produceName: produce[ingPro]?.produceName || '',\r\n            quantity: Number(grams),\r\n            id: Math.random()\r\n        }\r\n\r\n        setIngredients(ingredients.concat(ingredient))\r\n        setGrams('');\r\n        (document.getElementById('grams-input') as HTMLInputElement).value = \"\"\r\n    }\r\n\r\n    const submit = async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n\r\n        if(user) {\r\n            try {\r\n                const newVideo: newVideo = {\r\n                    userId: user.id,\r\n                    username: user.username,\r\n                    videoUrl: link,\r\n                    timeInMinutes: Number(time),\r\n                    vegetarian: vegetarian,\r\n                    added: Date.now()\r\n                }\r\n                const video: Video = await videoService.addVideo(newVideo);\r\n                \r\n                const newIngredients: newIngredient[] = ingredients.map((i) => {\r\n                    const ing = {\r\n                        produceId: i.produceId,\r\n                        quantity: i.quantity,\r\n                        videoId: video.id\r\n                    }\r\n                    return ing\r\n                })\r\n\r\n                await videoService.addIngredient(newIngredients)\r\n                showNotification(`${link} added!`, false)\r\n                setVegetarian(false)\r\n                setLink('')\r\n                setTime('')\r\n                setIngredients([]);\r\n                (document.getElementById('time-input') as HTMLInputElement).value = \"\";\r\n                (document.getElementById('link-input') as HTMLInputElement).value = \"\";\r\n                (document.getElementById('veg-input') as HTMLInputElement).checked = false;\r\n                history.push('/search')\r\n            } catch (e) {\r\n                showNotification(e.response.data, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    if(!user || !user.id) {\r\n        return(\r\n            <div className=\"center-text form-background\">\r\n                <h1> Only registered users may add videos. Please login!</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={submit} className=\"grid-add-video form-background\">\r\n                <div className=\"top-padding half\">\r\n                    <div>\r\n                        <p>Link to video </p>\r\n                        <span>(must start with </span>\r\n                        <span style={{color: 'red'}}>https://www.youtube.com/watch?v=</span>\r\n                        <span> ): </span>\r\n                    </div>\r\n                    <input className=\"text-input\" id=\"link-input\" onChange={({target}) => (setLink(target.value))}></input>\r\n                </div>\r\n                <div>\r\n                    <span>Cooking time (in minutes): </span>\r\n                    <input className=\"text-input\" id=\"time-input\" type=\"number\" min=\"1\" max=\"100000\" step=\"1\" onChange={({target}) => (setTime(target.value))}></input>\r\n                    {minutesError && <span style={{color: 'red'}}>Must be a integer!</span>}\r\n                </div>\r\n                <div>\r\n                    <p>Recipe is suitable for vegetarians? </p>\r\n                    <input id=\"veg-input\" className=\"checkbox\" type=\"checkbox\" onChange={({target}) => (setVegetarian(target.checked))}></input>\r\n                </div>\r\n                <div>\r\n                    <h1>Ingredients:</h1>\r\n                    {ingredients.map((i) => {\r\n                        return(\r\n                            <div key={i.id} className=\"top-padding\">\r\n                                <span>{i.quantity}g of {i.produceName}</span>\r\n                                <button className=\"remove-button\"onClick={() => setIngredients(ingredients.filter((ing) => ing.id !== i.id))}></button>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div>\r\n                    <section className=\"ingredient-grid\">\r\n                        <h1>Add ingredient</h1>\r\n                        <div className=\"top-margin\">\r\n                            <input className=\"text-input round-top set-width as-ablock\"onChange={({target}) => (setSearch(target.value))} placeholder='Search for produce...'></input>\r\n                            <select className=\"text-input round-bottom set-width as-abloc\" defaultValue={undefined} onChange={({target}) => (setIngPro(Number(target.value)))}>\r\n                                <option value={undefined}>Choose produce...</option>\r\n                                {Object.values(produce).filter((p) => \r\n                                p.produceName.toLowerCase().includes(search.toLowerCase()) || !search)\r\n                                .sort((a, b) => a.produceName.toLowerCase() <= b.produceName.toLowerCase() ? -1 : 1)\r\n                                .map((p) => {\r\n                                    return(\r\n                                    <option key={p.id} value={p.id}>{p.produceName}</option>\r\n                                    )\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"top-margin\">\r\n                            <p>How many grams?</p>\r\n                            <input className=\"text-input\" id=\"grams-input\" type=\"number\" min=\"1\" max=\"100000\" step=\"1\" onChange={(({target}) => (setGrams(target.value)))}></input>\r\n                            {gramsError && <p style={{color: 'red'}}>Must be a integer!</p>}\r\n                        </div>\r\n                        <button className=\"add-button top-margin\" type=\"button\" disabled={(gramsError || !grams || !ingPro)} onClick={() => submitIngredient()}> Add ingredient</button>\r\n                    </section>\r\n                </div>\r\n                <div className=\"wider\">\r\n                    <div className=\"button-group\">\r\n                        <div/>\r\n                        <span className=\"darker start-m start-f\">Add produce</span>\r\n                        <button className=\"open-button darker end-m end-f\" type=\"button\" onClick={() => setOpenAdd(!openAdd)}>{openAdd ? '-' : '+'}</button>\r\n                    </div>\r\n                    {openAdd && \r\n                        <AddProduce />\r\n                    }\r\n                </div>\r\n                <div>\r\n                   <button className=\"add-button\" disabled={(!time|| !link || linkError || minutesError)} type=\"submit\">\r\n                       Add video!\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddVideoPage","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\n\r\nconst NotificationBar: React.FC = () => {\r\n    const notifications = useSelector((state: RootState) => state.notifications.notifications)\r\n\r\n    return(\r\n        <div>\r\n            {notifications.map((n, index) => {\r\n                return(\r\n                    <div key={index} className={n.error ? 'inside-background error' : 'inside-background success'}>\r\n                        <p>{n.message}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationBar","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { RegisterPage } from './components/RegisterPage';\nimport { UserPage } from './components/UserPage';\nimport { SearchPage } from './components/SearchPage';\nimport { VideoPage } from './components/VideoPage';\nimport { LoginBar } from './components/LoginBar';\nimport loginStorage from './utils/loginStorage';\nimport { loadUser } from './reducers/loginReducer';\nimport { useAppDispatch } from './store';\nimport AddVideoPage from './components/AddVideoPage';\nimport NotificationBar from './components/NotificationBar';\n\nfunction App() {\n  const dispatch = useAppDispatch()\n  \n  useEffect(() => {\n    const user = loginStorage.loadUser()\n    if(user) {\n      dispatch(loadUser(user))\n    }\n  })\n\n  return (\n    <div className=\"restrict-width\">\n        <Router>\n          <NotificationBar />\n          <LoginBar />\n          <Switch>\n            <Route path=\"/register\" render={() => <RegisterPage />} />\n            <Route path=\"/user/:userid\" render={() => <UserPage />} />\n            <Route path=\"/search\" render={() => <SearchPage />} />\n            <Route path=\"/video/:videoid\" render={() => <VideoPage />} />\n            <Route path=\"/addVideo\" render={() => <AddVideoPage />} />\n            <Redirect exact from=\"/\" to=\"/search\" />\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport \"./index.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}